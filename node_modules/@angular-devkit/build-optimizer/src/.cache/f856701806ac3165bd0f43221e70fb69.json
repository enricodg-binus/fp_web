{"remainingRequest":"/Users/enrico/code/angular/fp_web/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/enrico/code/angular/fp_web/node_modules/angular-instantsearch/instantsearch/instantsearch.js","dependencies":[{"path":"/Users/enrico/code/angular/fp_web/node_modules/angular-instantsearch/instantsearch/instantsearch.js","mtime":1519831269000},{"path":"/Users/enrico/code/angular/fp_web/node_modules/cache-loader/dist/cjs.js","mtime":1522355410796},{"path":"/Users/enrico/code/angular/fp_web/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1522355408304}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter, Inject, PLATFORM_ID } from \"@angular/core\";\nimport { isPlatformBrowser } from \"@angular/common\";\nimport instantsearch from \"instantsearch.js/es\";\nimport { VERSION } from \"../version\";\nvar InstantSearchInstance = /*@__PURE__*/ (function () {\n    function InstantSearchInstance() {\n    }\n    return InstantSearchInstance;\n}());\nexport { InstantSearchInstance };\nvar NgAisInstantSearch = /*@__PURE__*/ (function () {\n    function NgAisInstantSearch(platformId) {\n        var _this = this;\n        this.platformId = platformId;\n        this.instanceName = \"default\";\n        this.change = new EventEmitter();\n        this.onRender = function () {\n            _this.change.emit({\n                results: _this.instantSearchInstance.helper.lastResults,\n                state: _this.instantSearchInstance.helper.state\n            });\n        };\n    }\n    NgAisInstantSearch.prototype.ngOnInit = function () {\n        this.createInstantSearchInstance(this.config);\n    };\n    NgAisInstantSearch.prototype.ngAfterViewInit = function () {\n        this.instantSearchInstance.start();\n    };\n    NgAisInstantSearch.prototype.ngOnDestroy = function () {\n        this.instantSearchInstance.removeListener(\"render\", this.onRender);\n        this.instantSearchInstance.dispose();\n    };\n    NgAisInstantSearch.prototype.createInstantSearchInstance = function (config) {\n        // add default searchParameters with highlighting config\n        if (!config.searchParameters)\n            config.searchParameters = {};\n        Object.assign(config.searchParameters, {\n            highlightPreTag: \"__ais-highlight__\",\n            highlightPostTag: \"__/ais-highlight__\"\n        });\n        // remove URLSync widget if on SSR\n        if (!isPlatformBrowser(this.platformId)) {\n            config.urlSync = false;\n        }\n        // custom algolia client agent\n        if (!config.createAlgoliaClient) {\n            config.createAlgoliaClient = function (algoliasearch, appId, apiKey) {\n                var client = algoliasearch(appId, apiKey);\n                client.addAlgoliaAgent(\"angular-instantsearch \" + VERSION);\n                return client;\n            };\n        }\n        this.instantSearchInstance = instantsearch(config);\n        this.instantSearchInstance.on(\"render\", this.onRender);\n    };\n    NgAisInstantSearch.prototype.addWidget = function (widget) {\n        this.instantSearchInstance.addWidget(widget);\n    };\n    NgAisInstantSearch.prototype.removeWidget = function (widget) {\n        this.instantSearchInstance.removeWidget(widget);\n    };\n    return NgAisInstantSearch;\n}());\nexport { NgAisInstantSearch };\n//# sourceMappingURL=instantsearch.js.map \n",null]}