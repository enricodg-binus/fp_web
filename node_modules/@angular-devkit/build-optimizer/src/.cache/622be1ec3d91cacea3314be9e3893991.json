{"remainingRequest":"/Users/enrico/code/angular/fp_web/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/enrico/code/angular/fp_web/node_modules/angular-instantsearch/highlight/highlight.js","dependencies":[{"path":"/Users/enrico/code/angular/fp_web/node_modules/angular-instantsearch/highlight/highlight.js","mtime":1519831270000},{"path":"/Users/enrico/code/angular/fp_web/node_modules/cache-loader/dist/cjs.js","mtime":1522355410796},{"path":"/Users/enrico/code/angular/fp_web/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1522355408304}],"contextDependencies":[],"result":["import { Component, Input } from \"@angular/core\";\nimport { isPlainObject, get } from \"lodash-es\";\nimport { bem } from \"../utils\";\nvar NgAisHighlight = /*@__PURE__*/ (function () {\n    function NgAisHighlight() {\n        this.tagName = \"em\";\n        this.cx = bem(\"Highlight\");\n    }\n    Object.defineProperty(NgAisHighlight.prototype, \"content\", {\n        get: function () {\n            if (this.attribute === \"highlighted\") {\n                return this.hit.highlighted\n                    ? this.replaceWithTagName(this.hit.highlighted)\n                    : this.hit.label;\n            }\n            if (this.hit.hasOwnProperty(\"_highlightResult\")) {\n                var attributeHighlighted = get(this.hit._highlightResult, this.attribute);\n                // check that the attributeHighlighted is a string\n                if (isPlainObject(attributeHighlighted) &&\n                    typeof attributeHighlighted.value === \"string\") {\n                    return this.replaceWithTagName(attributeHighlighted.value);\n                }\n            }\n            var fallback = get(this.hit, this.attribute);\n            if (!fallback) {\n                console.warn(\"Could not find attribute [\" + this.attribute + \"] into hit object, will display an empty string.\");\n                return \"\";\n            }\n            return fallback;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgAisHighlight.prototype.replaceWithTagName = function (value) {\n        return value\n            .replace(new RegExp(\"<em>\", \"g\"), \"<\" + this.tagName + \" class=\\\"\" + this.cx(\"highlighted\") + \"\\\">\")\n            .replace(new RegExp(\"</em>\", \"g\"), \"</\" + this.tagName + \">\");\n    };\n    return NgAisHighlight;\n}());\nexport { NgAisHighlight };\n//# sourceMappingURL=highlight.js.map \n",null]}