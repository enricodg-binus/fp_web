{"remainingRequest":"/Users/enrico/code/angular/fp_web/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/enrico/code/angular/fp_web/node_modules/angular-instantsearch/range-slider/range-slider.js","dependencies":[{"path":"/Users/enrico/code/angular/fp_web/node_modules/angular-instantsearch/range-slider/range-slider.js","mtime":1519831270000},{"path":"/Users/enrico/code/angular/fp_web/node_modules/cache-loader/dist/cjs.js","mtime":1522355410796},{"path":"/Users/enrico/code/angular/fp_web/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1522355408304}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, Input, ViewChild, Inject, forwardRef } from \"@angular/core\";\nimport { connectRange } from \"instantsearch.js/es/connectors\";\nimport { isPlainObject, noop } from \"lodash-es\";\nimport * as noUiSlider from \"nouislider\";\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput } from \"../utils\";\nvar NgAisRangeSlider = /*@__PURE__*/ (function (_super) {\n    __extends(NgAisRangeSlider, _super);\n    function NgAisRangeSlider(instantSearchParent) {\n        var _this = _super.call(this, \"RangeSlider\") || this;\n        _this.instantSearchParent = instantSearchParent;\n        // render options\n        _this.pips = true;\n        _this.tooltips = true;\n        _this.precision = 2;\n        _this.state = {\n            range: { min: 0, max: 1 },\n            refine: noop,\n            start: [0, 1]\n        };\n        _this.updateState = function (state, isFirstRendering) {\n            if (isFirstRendering) {\n                // create slider\n                var config = {\n                    animate: false,\n                    behaviour: \"snap\",\n                    connect: true,\n                    range: { min: 0, max: 1 },\n                    start: [0, 1],\n                    step: _this.step,\n                    tooltips: _this.tooltips && [\n                        { to: _this.formatTooltip },\n                        { to: _this.formatTooltip }\n                    ]\n                };\n                if (_this.pips === true || typeof _this.pips === \"undefined\") {\n                    Object.assign(config, {\n                        pips: {\n                            density: 3,\n                            mode: \"positions\",\n                            stepped: true,\n                            values: [0, 50, 100]\n                        }\n                    });\n                }\n                else if (isPlainObject(_this.pips)) {\n                    Object.assign(config, { pips: _this.pips });\n                }\n                _this.slider = noUiSlider.create(_this.sliderContainer.nativeElement, config);\n                // register listen events\n                _this.sliderContainer.nativeElement.noUiSlider.on(\"change\", _this.handleChange);\n            }\n            // update component inner state\n            _this.state = state;\n            // update the slider state\n            var _a = state.range, min = _a.min, max = _a.max, start = state.start;\n            var disabled = min === max;\n            var range = disabled ? { min: min, max: max + 0.0001 } : { min: min, max: max };\n            _this.slider.updateOptions({ disabled: disabled, range: range, start: start });\n        };\n        _this.handleChange = function (values) {\n            _this.state.refine(values);\n        };\n        _this.formatTooltip = function (value) {\n            return value.toFixed(parseNumberInput(_this.precision));\n        };\n        return _this;\n    }\n    Object.defineProperty(NgAisRangeSlider.prototype, \"step\", {\n        get: function () {\n            // compute step from the precision value\n            var precision = parseNumberInput(this.precision) || 2;\n            return 1 / Math.pow(10, precision);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgAisRangeSlider.prototype.ngOnInit = function () {\n        this.createWidget(connectRange, {\n            attributeName: this.attribute,\n            max: parseNumberInput(this.max),\n            min: parseNumberInput(this.min),\n            precision: parseNumberInput(this.precision)\n        });\n        _super.prototype.ngOnInit.call(this);\n    };\n    return NgAisRangeSlider;\n}(BaseWidget));\nexport { NgAisRangeSlider };\n//# sourceMappingURL=range-slider.js.map \n",null]}