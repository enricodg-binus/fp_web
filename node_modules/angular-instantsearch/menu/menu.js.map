{"version":3,"sources":["../../src/menu/menu.ts"],"names":[],"mappings":"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","file":"menu.js","sourceRoot":"","sourcesContent":["import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectMenu } from \"instantsearch.js/es/connectors\";\nimport { noop, isFunction } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput } from \"../utils\";\n\nexport type MenuState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n};\n\n\nexport class NgAisMenu extends BaseWidget {\n  // render options\n   public showMoreLabel: string = \"Show more\";\n   public showLessLabel: string = \"Show less\";\n   public transformItems?: Function;\n\n  // connector options\n   public attribute: string;\n   public limit?: number | string = 10;\n   public showMoreLimit?: number | string;\n   public sortBy?: string[] | ((item: object) => number);\n\n  public state: MenuState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx(\"showMore\");\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx(\"showMore\", \"disabled\")}`;\n    }\n\n    return className;\n  }\n\n  get items() {\n    return isFunction(this.transformItems)\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  constructor(\n    \n    public instantSearchParent: any\n  ) {\n    super(\"Menu\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectMenu, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      sortBy: this.sortBy\n    });\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-menu\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showMoreLabel': [{ type: Input },],\n'showLessLabel': [{ type: Input },],\n'transformItems': [{ type: Input },],\n'attribute': [{ type: Input },],\n'limit': [{ type: Input },],\n'showMoreLimit': [{ type: Input },],\n'sortBy': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}