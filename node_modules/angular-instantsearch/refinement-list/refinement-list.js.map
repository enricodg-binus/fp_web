{"version":3,"sources":["../../src/refinement-list/refinement-list.ts"],"names":[],"mappings":"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","file":"refinement-list.js","sourceRoot":"","sourcesContent":["import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectRefinementList } from \"instantsearch.js/es/connectors\";\nimport { noop, isFunction } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { bem, parseNumberInput } from \"../utils\";\n\nexport type RefinementListState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n  searchForItems: Function;\n  isFormSearch: boolean;\n};\n\n\nexport class NgAisRefinementList extends BaseWidget {\n  // render options\n   public showMoreLabel: string = \"Show more\";\n   public showLessLabel: string = \"Show less\";\n   public transformItems?: Function;\n   public searchable?: boolean;\n   public searchPlaceholder: string = \"Search here...\";\n\n  // connectors options\n   public attribute: string;\n   public operator: \"or\" | \"and\" = \"or\";\n   public limit: number | string = 10;\n   public showMoreLimit: number | string;\n   public sortBy: string[] | ((item: object) => number);\n\n  public state: RefinementListState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFormSearch: false\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    \n    public instantSearchParent: any\n  ) {\n    super(\"RefinementList\");\n  }\n\n  get items() {\n    return isFunction(this.transformItems)\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      sortBy: this.sortBy,\n      escapeFacetValues: true\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(\n    event: MouseEvent,\n    item: { isRefined: boolean; value: string }\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-refinement-list\",\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ng-ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ng-ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ng-ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ng-ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showMoreLabel': [{ type: Input },],\n'showLessLabel': [{ type: Input },],\n'transformItems': [{ type: Input },],\n'searchable': [{ type: Input },],\n'searchPlaceholder': [{ type: Input },],\n'attribute': [{ type: Input },],\n'operator': [{ type: Input },],\n'limit': [{ type: Input },],\n'showMoreLimit': [{ type: Input },],\n'sortBy': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}