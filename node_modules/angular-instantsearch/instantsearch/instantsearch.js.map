{"version":3,"sources":["../../src/instantsearch/instantsearch.ts"],"names":[],"mappings":"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","file":"instantsearch.js","sourceRoot":"","sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID\n} from \"@angular/core\";\nimport { isPlatformBrowser } from \"@angular/common\";\n\nimport instantsearch from \"instantsearch.js/es\";\n\nimport { Widget } from \"../base-widget\";\nimport { VERSION } from \"../version\";\n\nexport type InstantSearchConfig = {\n  appId: string;\n  apiKey: string;\n  indexName: string;\n\n  numberLocale?: string;\n  searchFunction?: () => void;\n  createAlgoliaClient?: (\n    algoliasearch: Function,\n    appId: string,\n    apiKey: string\n  ) => object;\n  searchParameters?: object | void;\n  urlSync?:\n    | boolean\n    | {\n        mapping?: object;\n        threshold?: number;\n        trackedParameters?: string[];\n        useHash?: boolean;\n        getHistoryState?: () => object;\n      };\n};\n\nexport class InstantSearchInstance {\n  public start: () => void;\n\n  public addWidget: (widget: Widget) => void;\n  public addWidgets: (widgets: Widget[]) => void;\n\n  public removeWidget: (widget: Widget) => void;\n  public removeWidgets: (widgets: Widget[]) => void;\n\n  // EventEmmiter\n  public on: (eventName: string, callback: Function) => void;\n  public removeListener: (eventName: string, callback: Function) => void;\n\n  public helper: {\n    lastResults: Object;\n    state: Object;\n  };\n\n  public dispose: () => void;\n}\n\n\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n   public config: InstantSearchConfig;\n   public instanceName: string = \"default\";\n\n  \n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor( private platformId: Object) {}\n\n  public ngOnInit() {\n    this.createInstantSearchInstance(this.config);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    this.instantSearchInstance.removeListener(\"render\", this.onRender);\n    this.instantSearchInstance.dispose();\n  }\n\n  public createInstantSearchInstance(config: InstantSearchConfig) {\n    // add default searchParameters with highlighting config\n    if (!config.searchParameters) config.searchParameters = {};\n    Object.assign(config.searchParameters, {\n      highlightPreTag: \"__ais-highlight__\",\n      highlightPostTag: \"__/ais-highlight__\"\n    });\n\n    // remove URLSync widget if on SSR\n    if (!isPlatformBrowser(this.platformId)) {\n      config.urlSync = false;\n    }\n\n    // custom algolia client agent\n    if (!config.createAlgoliaClient) {\n      config.createAlgoliaClient = (algoliasearch, appId, apiKey) => {\n        const client = algoliasearch(appId, apiKey);\n        client.addAlgoliaAgent(`angular-instantsearch ${VERSION}`);\n        return client;\n      };\n    }\n\n    this.instantSearchInstance = instantsearch(config);\n    this.instantSearchInstance.on(\"render\", this.onRender);\n  }\n\n  public addWidget(widget: Widget) {\n    this.instantSearchInstance.addWidget(widget);\n  }\n\n  public removeWidget(widget: Widget) {\n    this.instantSearchInstance.removeWidget(widget);\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state\n    });\n  };\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-instantsearch\",\n  template: `<ng-content></ng-content>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'config': [{ type: Input },],\n'instanceName': [{ type: Input },],\n'change': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}