{"version":3,"sources":["../../src/numeric-selector/numeric-selector.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAAQ,UAAA,EAAW,MAAO,eAAA,CAAgB;AAErE,OAAO,EAAE,sBAAA,EAAuB,MAAO,gCAAA,CAAiC;AACxE,OAAO,EAAE,IAAA,EAAK,MAAO,WAAA,CAAY;AAEjC,OAAO,EAAE,UAAA,EAAW,MAAO,gBAAA,CAAiB;AAC5C,OAAO,EAAE,kBAAA,EAAmB,MAAO,gCAAA,CAAiC;AASpE;IAA0C,wCAAU;IAgBlD,8BAES,mBAAwB;QAFjC,YAIE,kBAAM,iBAAiB,CAAC,SACzB;QAHQ,yBAAmB,GAAnB,mBAAmB,CAAK;QAfzB,cAAQ,GAAyC,GAAG,CAAC;QAOtD,WAAK,GAAyB;YACnC,iBAAiB,EAAE,IAAI;YACvB,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;SACb,CAAC;;IAOF,CAAC;IAEM,uCAAQ,GAAf;QACE,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE;YACxC,aAAa,EAAE,IAAI,CAAC,SAAS;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,KAAK;SACpB,CAAC,CAAC;QACH,iBAAM,QAAQ,WAAE,CAAC;IACnB,CAAC;IACI,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,yBAAyB;oBACnC,QAAQ,EAAE,mbAgBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,mCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,kBAAkB,EAAlB,CAAkB,CAAC,EAAG,EAAE,EAAG,EAAC;KAClG,EAF6F,CAE7F,CAAC;IACK,mCAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC1B,CAAC;IACF,2BAAC;CA9DD,AA8DC,CA9DyC,UAAU,GA8DnD;SA9DY,oBAAoB","file":"numeric-selector.js","sourceRoot":"","sourcesContent":["import { Component, Input, Inject, forwardRef } from \"@angular/core\";\n\nimport { connectNumericSelector } from \"instantsearch.js/es/connectors\";\nimport { noop } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\n\nexport type NumericSelectorState = {\n  currentRefinement?: string | null;\n  options: {}[];\n  refine: Function;\n};\n\n\nexport class NgAisNumericSelector extends BaseWidget {\n  // connector options\n   public attribute: string;\n   public operator: \"<\" | \"<=\" | \"=\" | \">=\" | \">\" | \"!=\" = \"=\";\n  \n  public items: {\n    value: number;\n    label: string;\n  }[];\n\n  public state: NumericSelectorState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop\n  };\n\n  constructor(\n    \n    public instantSearchParent: any\n  ) {\n    super(\"NumericSelector\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericSelector, {\n      attributeName: this.attribute,\n      operator: this.operator,\n      options: this.items\n    });\n    super.ngOnInit();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-numeric-selector\",\n  template: `\n    <div [class]=\"cx('')\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'attribute': [{ type: Input },],\n'operator': [{ type: Input },],\n'items': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}