{"version":3,"sources":["../../src/range-input/range-input.ts"],"names":[],"mappings":"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","file":"range-input.js","sourceRoot":"","sourcesContent":["import { Inject, Component, Input, forwardRef } from \"@angular/core\";\n\nimport { connectRange } from \"instantsearch.js/es/connectors\";\nimport { noop } from \"lodash-es\";\n\nimport { BaseWidget } from \"../base-widget\";\nimport { NgAisInstantSearch } from \"../instantsearch/instantsearch\";\nimport { parseNumberInput } from \"../utils\";\n\nexport type NumericRangeState = {\n  range: { min?: number; max?: number };\n  refine: Function;\n  start: number[];\n};\n\n\nexport class NgAisRangeInput extends BaseWidget {\n  // render options\n   public currency: string = \"$\";\n   public separator: string = \"to\";\n   public submitLabel: string = \"Go\";\n\n  // connector options\n   public attribute: string;\n   public min?: number | string;\n   public max?: number | string;\n   public precision: number | string = 2;\n\n  // inner state\n  public minInputValue?: number | string = \"\";\n  public maxInputValue?: number | string = \"\";\n\n  get step() {\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  public state: NumericRangeState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0]\n  };\n\n  constructor(\n    \n    public instantSearchParent: any\n  ) {\n    super(\"RangeInput\");\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attributeName: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision)\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === \"min\") {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: MouseEvent | KeyboardEvent) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-range-input\",\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'min')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'max')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => NgAisInstantSearch), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'currency': [{ type: Input },],\n'separator': [{ type: Input },],\n'submitLabel': [{ type: Input },],\n'attribute': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'precision': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}