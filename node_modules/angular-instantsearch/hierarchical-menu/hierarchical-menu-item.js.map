{"version":3,"sources":["../../src/hierarchical-menu/hierarchical-menu-item.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAM,MAAO,eAAA,CAAgB;AACjD,OAAO,EAAE,GAAA,EAAI,MAAO,UAAA,CAAW;AAW/B;IAAA;QACU,QAAG,GAAW,CAAC,CAAC;QAKjB,OAAE,GAAG,GAAG,CAAC,kBAAkB,CAAC,CAAC;IA4EtC,CAAC;IA1EQ,gDAAY,GAAnB,UAAoB,IAAI;QACtB,IAAI,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAEhC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,SAAS,GAAM,SAAS,SAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,CAAG,CAAC;QAC5D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACpD,SAAS,GAAM,SAAS,SAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAG,CAAC;QAC1D,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEM,gDAAY,GAAnB,UAAoB,IAAI;QACtB,MAAM,CAAI,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,SAAI,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,SAAI,IAAI,CAAC,EAAE,CAC9D,MAAM,EACN,KAAK,GAAG,IAAI,CAAC,GAAG,CACf,CAAC;IACN,CAAC;IAEM,2CAAO,GAAd,UAAe,cAAmB;QAChC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC;IAEM,+CAAW,GAAlB,UAAmB,KAAiB,EAAE,IAA0B;QAC9D,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACI,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,+BAA+B;oBACzC,QAAQ,EAAE,0yBA4BT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,wCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,wCAAc,GAA2C;QAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACzB,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACzB,CAAC;IACF,gCAAC;CAlFD,AAkFC,IAAA;SAlFY,yBAAyB","file":"hierarchical-menu-item.js","sourceRoot":"","sourcesContent":["import { Component, Input } from \"@angular/core\";\nimport { bem } from \"../utils\";\n\nexport type HierarchicalMenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n  data: HierarchicalMenuItem[];\n};\n\n\nexport class NgAisHierarchicalMenuItem {\n   public lvl: number = 1;\n   public refine: (string) => void;\n   public createURL: (string) => string;\n   public item: HierarchicalMenuItem;\n\n  public cx = bem(\"HierarchicalMenu\");\n\n  public getItemClass(item) {\n    let className = this.cx(\"item\");\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx(\"item\", \"selected\")}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx(\"item\", \"parent\")}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(item) {\n    return `${this.cx(\"list\")} ${this.cx(\"list\", \"child\")} ${this.cx(\n      \"list\",\n      \"lvl\" + this.lvl\n    )}`;\n  }\n\n  public isArray(potentialArray: any) {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: \"ng-ais-hierarchical-menu-item\",\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass(item)\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ng-ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ng-ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'lvl': [{ type: Input },],\n'refine': [{ type: Input },],\n'createURL': [{ type: Input },],\n'item': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}